// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/gardener/cert-management/pkg/apis/cert/v1alpha1"
	certv1alpha1 "github.com/gardener/cert-management/pkg/client/cert/clientset/versioned/typed/cert/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeIssuers implements IssuerInterface
type fakeIssuers struct {
	*gentype.FakeClientWithList[*v1alpha1.Issuer, *v1alpha1.IssuerList]
	Fake *FakeCertV1alpha1
}

func newFakeIssuers(fake *FakeCertV1alpha1, namespace string) certv1alpha1.IssuerInterface {
	return &fakeIssuers{
		gentype.NewFakeClientWithList[*v1alpha1.Issuer, *v1alpha1.IssuerList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("issuers"),
			v1alpha1.SchemeGroupVersion.WithKind("Issuer"),
			func() *v1alpha1.Issuer { return &v1alpha1.Issuer{} },
			func() *v1alpha1.IssuerList { return &v1alpha1.IssuerList{} },
			func(dst, src *v1alpha1.IssuerList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.IssuerList) []*v1alpha1.Issuer { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.IssuerList, items []*v1alpha1.Issuer) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
