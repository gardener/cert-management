#!/bin/bash
#
# SPDX-FileCopyrightText: 2019 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

set -e

SOURCE_PATH="$(readlink -f "$(dirname ${0})/..")"

PROJECT_ROOT=$(dirname $0)/..

# setup virtual GOPATH
export REPO_ROOT=${REPO_ROOT}
source "$GARDENER_HACK_DIR"/vgopath-setup.sh

# cleanup generated files
rm -f ${GOPATH}/bin/*-gen
rm -rf "${SOURCE_PATH}/pkg/client/cert"

CODE_GEN_DIR=$(go list -m -f '{{.Dir}}' k8s.io/code-generator)
source "${CODE_GEN_DIR}/kube_codegen.sh"

kube::codegen::gen_helpers \
  --boilerplate "${PROJECT_ROOT}/hack/LICENSE_BOILERPLATE.txt" \
  "${PROJECT_ROOT}/pkg/apis"

kube::codegen::gen_helpers \
  --boilerplate "${PROJECT_ROOT}/hack/LICENSE_BOILERPLATE.txt" \
  --extra-peer-dir k8s.io/apimachinery/pkg/apis/meta/v1 \
  --extra-peer-dir k8s.io/apimachinery/pkg/conversion \
  --extra-peer-dir k8s.io/component-base/config \
  --extra-peer-dir k8s.io/component-base/config/v1alpha1 \
  "${PROJECT_ROOT}/pkg/certman2/apis/config"

kube::codegen::gen_client \
  --with-watch \
  --one-input-api "cert/v1alpha1" \
  --output-dir "${PROJECT_ROOT}/pkg/client/cert" \
  --output-pkg "github.com/gardener/cert-management/pkg/client/cert" \
  --boilerplate "${PROJECT_ROOT}/hack/LICENSE_BOILERPLATE.txt" \
  "${PROJECT_ROOT}/pkg/apis"
