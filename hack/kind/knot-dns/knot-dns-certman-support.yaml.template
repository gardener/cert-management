apiVersion: v1
kind: ConfigMap
metadata:
  name: knot-dns-config
  namespace: certman-support
data:
  knot.conf: |
    # This is a sample of a minimal configuration file for Knot DNS.
    # See knot.conf(5) or refer to the server documentation.
    
    server:
      rundir: "/rundir"
      user: knot:knot
      automatic-acl: on
      listen: [ 0.0.0.0@53, ::0@53 ]
    
    log:
      - target: stderr
        any: debug
    #   server: info # critical | error | warning | notice | info | debug
    #   control: info
    #   zone: info
    #   quic: info
    
    database:
      storage: "/storage"
    
    template:
      - id: default
        storage: "/storage"
        file: "%s.zone"
    
    key:
    - id: "access-1234."
      algorithm: hmac-sha256
      secret: #secret-injection

    acl: 
    - id: "update-acl"
      address: [ "0.0.0.0/0" ]
      action: update
      key: "access-1234."
    - id: "transfer-acl"
      address: [ "0.0.0.0/0" ]
      action: transfer
      key: "access-1234."

    zone:
      # Primary zone
      - domain: certman.kind
        acl: [ "update-acl", "transfer-acl" ]

  certman.kind.zone: |
    $ORIGIN certman.kind.
    $TTL 60

    @	SOA	ns1.certman.kind. hostmaster.certman.kind. (
      2010111213	; serial
      6h		; refresh
      1h		; retry
      1w		; expire
      120 )		; minimum
    
        NS	ns1

    ns1	A	192.0.2.1
    	AAAA	2001:DB8::1
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    origin: knot-dns-up.sh
  name: knot-dns-secret
  namespace: default
stringData:
  Server: #server-injection
  TSIGKeyName: access-1234.
  TSIGSecret: #secret-injection
  TSIGSecretAlgorithm: hmac-sha256
  Zone: certman.kind.
type: Opaque
---
apiVersion: dns.gardener.cloud/v1alpha1
kind: DNSProvider
metadata:
  annotations:
    origin: knot-dns-up.sh
  name: knot-dns
  namespace: default
spec:
  secretRef:
    name: knot-dns-secret
  type: rfc2136
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: knot-dns
    app.kubernetes.io/name: knot-dns
  name: knot-dns
  namespace: certman-support
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/instance: knot-dns
      app.kubernetes.io/name: knot-dns
  serviceName: knot-dns
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: knot-dns
        app.kubernetes.io/name: knot-dns
    spec:
      containers:
      - name: knot-dns
        command:
        - /usr/sbin/knotd
        image: cznic/knot
        ports:
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        volumeMounts:
        - mountPath: /config
          name: config
          readOnly: true
        - mountPath: /storage
          name: storage
      initContainers:
      - name: init-zone
        image: cznic/knot
        command:
          - /usr/bin/sh
          - -c
          - 'if [ ! -f /storage/certman.kind.zone ]; then cp /config/certman.kind.zone /storage; chown knot:knot /storage/certman.kind.zone; echo /storage/certman.kind.zone initialized; fi'
        volumeMounts:
          - mountPath: /config
            name: config
            readOnly: true
          - mountPath: /storage
            name: storage
      volumes:
      - configMap:
          defaultMode: 420
          name: knot-dns-config
        name: config
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: knot-dns
        app.kubernetes.io/name: knot-dns
      name: storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
      volumeMode: Filesystem
